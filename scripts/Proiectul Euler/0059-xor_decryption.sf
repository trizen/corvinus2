#!/usr/bin/ruby

# Your task has been made easy, as the encryption key consists of three lower case characters.
# Using cipher.txt (right click and 'Save Link/Target As...'), a file containing the encrypted
# ASCII codes, and the knowledge that the plain text must contain common English words, decrypt
# the message and find the sum of the ASCII values in the original text.

# https://projecteuler.net/problem=59

# Answer: 107359

var enc = eval('[' + %f'0059-cipher.txt'.open_r.slurp + ']');

var p_len = 3;      # password length
var pass = [];      # decoded password

range(0, p_len-1).each { |p|
    range('a'.ord, 'z'.ord).each { |c|

        var dec = [];
        range(p, enc.end, p_len).each { |i|
            dec << chr(enc[i] ^ c);
        }

        # The number of non-alpha and non-space chars
        var count = dec.join.count(/[^a-z ]/i);

        # The ratio must be less than 10%
        if (count/dec.len < 0.1) {
            pass << c;
            break;
        }
    }
}

var dec = [];
enc.range.each { |i|
    dec << enc[i]^pass[i % p_len];
}

say dec.sum;
