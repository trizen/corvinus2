#!/usr/bin/ruby

include Lingua::RO::Numbers;

var lingua = Lingua::RO::Numbers::nou();

[
    [3,               'trei'],
    [0.001,           'zero virgulă zero zero unu'],
    [0.139,           'zero virgulă o sută treizeci și nouă'],
    [3.14,            'trei virgulă paisprezece'],
    [12.26,           'doisprezece virgulă douăzeci și șase'],
    [-9_960,          'minus nouă mii nouă sute șaizeci'],
    [1_000,           'o mie'],
    [4_200,           'patru mii două sute'],
    [10_017,          'zece mii șaptesprezece'],
    [62_000,          'șaizeci și două de mii'],
    [112_000,         'o sută doisprezece mii'],
    [120_000,         'o sută douăzeci de mii'],
    [1_012_000,       'un milion doisprezece mii'],
    [102_000_000,     'o sută două milioane'],
    [1_500_083,       'un milion cinci sute de mii optzeci și trei'],
    [1_114_000_000,   'un miliard o sută paisprezece milioane'],
    [119_830_000,     'o sută nouăsprezece milioane opt sute treizeci de mii'],
    [1_198_300_000,   'un miliard o sută nouăzeci și opt de milioane trei sute de mii'],
    [11_983_000_000,  'unsprezece miliarde nouă sute optzeci și trei de milioane'],
    [119_830_000_000, 'o sută nouăsprezece miliarde opt sute treizeci de milioane'],
    [-0.688121,       'minus zero virgulă șase sute optzeci și opt de mii o sută douăzeci și unu'],
].each { |pair|

    var num = (lingua.in_litere(pair[0]));

    num == pair[1]
        || ("Error on number: <%s> -- got: <%s>\n".sprintf(pair[0], num).die);

    "%12s -> %s\n".printf(pair[0], num);
}
